# syntax = docker/dockerfile:experimental
FROM ubuntu:24.04 AS ovs-builder

ARG ARCH
ARG DPDK_VERSION=23.11.1
ARG DEBIAN_FRONTEND=noninteractive
ARG SRC_DIR='/usr/src'
ARG PIP_BREAK_SYSTEM_PACKAGES=1

ADD patches/4228eab1d722087ba795e310eadc9e25c4513ec1.patch $SRC_DIR
ADD patches/54056ea65dc28aa1c4c721a2a34d7913f79f8376.patch $SRC_DIR
ADD patches/6b4dcb311f171d81a5d40ea51a273fc356c123db.patch $SRC_DIR
ADD patches/f627b7721ec282f2edaf798913b1559b939687f0.patch $SRC_DIR
ADD patches/3f3e3a436ff5eb2eaafbeeae8ea9dc0c514fe8a3.patch $SRC_DIR
ADD patches/a6cb8215a80635129e4fada4c0d25c25fb746bf7.patch $SRC_DIR
ADD patches/d4d76ddb2e12cdd9e73bb5e008ebb9fd1b4d6ca6.patch $SRC_DIR
ADD patches/ffd2328d4a55271569e2b89e54a2c18f4e186af8.patch $SRC_DIR
ADD patches/d088c5d8c263552c5a31d87813991aee30ab74de.patch $SRC_DIR
ADD patches/1b31f07dc60c016153fa35d936cdda0e02e58492.patch $SRC_DIR
ADD patches/e490f5ac0b644101913c2a3db8e03d85e859deff.patch $SRC_DIR
ADD patches/b973ec477b43df1c3ef3cdb69f8646948fcf94ae.patch $SRC_DIR
ADD patches/5593e614e51a5dce28941e5bf760f9ee5397cede.patch $SRC_DIR
ADD patches/f9e97031b56ab5747b5d73629198331a6daacdfd.patch $SRC_DIR

RUN apt update && apt install -y git curl

# The support for AVX-512 depends on your build machine's CPU. judge it support the avx512 use the command 'cat /proc/cpuinfo | grep avx512'
RUN cd /usr/src/ && \
    git clone -b branch-3.3 --depth=1 https://github.com/openvswitch/ovs.git && \
    cd ovs && \
    # fix memory leak by ofport_usage and trim memory periodically
    git apply $SRC_DIR/4228eab1d722087ba795e310eadc9e25c4513ec1.patch && \
    # increase election timer
    git apply $SRC_DIR/54056ea65dc28aa1c4c721a2a34d7913f79f8376.patch && \
    # add fdb update logging
    git apply $SRC_DIR/6b4dcb311f171d81a5d40ea51a273fc356c123db.patch && \
    # fdb: fix mac learning in environments with hairpin enabled
    git apply $SRC_DIR/f627b7721ec282f2edaf798913b1559b939687f0.patch && \
    # ovsdb-tool: add optional server id parameter for "join-cluster" command
    git apply $SRC_DIR/3f3e3a436ff5eb2eaafbeeae8ea9dc0c514fe8a3.patch && \
    # fix memory leak in qos
    git apply $SRC_DIR/a6cb8215a80635129e4fada4c0d25c25fb746bf7.patch && \
    # ovsdb-tool: add command fix-cluster
    git apply $SRC_DIR/d4d76ddb2e12cdd9e73bb5e008ebb9fd1b4d6ca6.patch && \
    # netdev: reduce cpu utilization for getting device addresses
    git apply $SRC_DIR/ffd2328d4a55271569e2b89e54a2c18f4e186af8.patch && \
    # ovs-router: skip getting source address for kube-ipvs0
    git apply $SRC_DIR/d088c5d8c263552c5a31d87813991aee30ab74de.patch && \
    # increase the default probe interval for large cluster
    git apply $SRC_DIR/1b31f07dc60c016153fa35d936cdda0e02e58492.patch

RUN cd /usr/src/ && git clone -b branch-24.03 --depth=1 https://github.com/ovn-org/ovn.git && \
    cd ovn && \
    # change hash type from dp_hash to hash with field src_ip
    git apply $SRC_DIR/e490f5ac0b644101913c2a3db8e03d85e859deff.patch && \
    # modify src route priority
    git apply $SRC_DIR/b973ec477b43df1c3ef3cdb69f8646948fcf94ae.patch && \
    # fix reaching resubmit limit in underlay
    git apply $SRC_DIR/5593e614e51a5dce28941e5bf760f9ee5397cede.patch && \
    # ovn-controller: do not send GARP on localnet for Kube-OVN ports
    git apply $SRC_DIR/f9e97031b56ab5747b5d73629198331a6daacdfd.patch

RUN apt install -y build-essential fakeroot \
    autoconf automake bzip2 debhelper-compat dh-exec dh-python dh-sequence-python3 dh-sequence-sphinxdoc \
    graphviz iproute2 libcap-ng-dev libdbus-1-dev libnuma-dev libpcap-dev libssl-dev libtool libunbound-dev \
    openssl pkg-config procps python3-all-dev python3-setuptools python3-sortedcontainers python3-sphinx \
    libjemalloc-dev python3-pip libibverbs1 libibverbs-dev ibverbs-providers libsystemd-dev

RUN pip3 install meson ninja pyelftools

RUN cd /usr/src/ && \
    curl -o dpdk-${DPDK_VERSION}.tar.xz https://fast.dpdk.org/rel/dpdk-${DPDK_VERSION}.tar.xz && \
    tar xf dpdk-${DPDK_VERSION}.tar.xz && \
    export DPDK_DIR=/usr/src/dpdk-stable-${DPDK_VERSION} && \
    export DPDK_BUILD=$DPDK_DIR/build && \
    cd $DPDK_DIR && \
    meson build && \
    ninja -C build && \
    ninja -C build install && \
    ldconfig

RUN cd /usr/src/ovs && \
    ./boot.sh && \
    ./configure --with-dpdk=shared && \
    rm -rf .git && \
    echo override_dh_shlibdeps: >> /usr/src/ovs/debian/rules && \
    echo "\tdh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info" >> /usr/src/ovs/debian/rules && \
    export DPDK_DIR=/usr/src/dpdk-stable-${DPDK_VERSION} && \
    CONFIGURE_OPTS='CFLAGS="-fPIC"' && \
    if [ "$ARCH" = "amd64" ]; then CONFIGURE_OPTS='CFLAGS="-O2 -g -msse4.2 -mpopcnt -fPIC"'; fi && \
    DATAPATH_CONFIGURE_OPTS='--prefix=/usr' EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS make debian-deb

RUN cd /usr/src/ovn && \
    sed -i 's/OVN/ovn/g' debian/changelog && \
    rm -rf .git && \
    ./boot.sh && \
    CONFIGURE_OPTS='--with-ovs-build=/usr/src/ovs/_debian CFLAGS="-fPIC"' && \
    if [ "$ARCH" = "amd64" ]; then CONFIGURE_OPTS="--with-ovs-build=/usr/src/ovs/_debian CFLAGS='-O2 -g -msse4.2 -mpopcnt -fPIC'"; fi && \
    OVSDIR=/usr/src/ovs EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary

RUN mkdir /packages/ && \
    cp /usr/src/openvswitch-*deb /packages && \
    cp /usr/src/python3-openvswitch*deb /packages && \
    cp /usr/src/ovn-*deb /packages && \
    cd /packages && rm -f *source* *doc* *datapath* *docker* *vtep* *test* *dev*

FROM ubuntu:24.04

ARG DEBIAN_FRONTEND=noninteractive
ARG PIP_BREAK_SYSTEM_PACKAGES=1

RUN apt update && apt upgrade -y && apt install ca-certificates python3 libunwind8 netbase \
        ethtool iproute2 ncat libunbound8 libatomic1 kmod iptables python3-netifaces python3-sortedcontainers \
        tcpdump ipvsadm ipset curl uuid-runtime openssl inetutils-ping arping ndisc6 conntrack iputils-tracepath \
        logrotate dnsutils net-tools strongswan strongswan-pki libcharon-extra-plugins \
        libcharon-extauth-plugins libstrongswan-extra-plugins libstrongswan-standard-plugins \
        python3-pip build-essential libssl-dev libibverbs-dev libnuma-dev libpcap-dev -y --no-install-recommends && \
        rm -rf /var/lib/apt/lists/* && \
        rm -rf /etc/localtime

RUN pip3 install meson ninja pyelftools

RUN mkdir -p /var/run/openvswitch && \
    mkdir -p /var/run/ovn && \
    mkdir -p /etc/cni/net.d && \
    mkdir -p /opt/cni/bin

ARG ARCH
ARG DPDK_VERSION=23.11.1
COPY --from=ovs-builder /usr/src/dpdk-stable-${DPDK_VERSION} /usr/src/dpdk-stable-${DPDK_VERSION}

RUN cd /usr/src/dpdk-stable-${DPDK_VERSION} && \
    rm -rf ./build && \
    meson build && \
    ninja -C build && \
    ninja -C build install && \
    ldconfig && \
    rm -rf /usr/src/dpdk-stable-${DPDK_VERSION}

RUN --mount=type=bind,target=/packages,from=ovs-builder,source=/packages  \
    dpkg -i --ignore-depends=dpdk /packages/*.deb

RUN cp /usr/lib/openvswitch-switch-dpdk/ovs-vswitchd-dpdk /usr/sbin/ovs-vswitchd