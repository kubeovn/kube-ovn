# syntax = docker/dockerfile:experimental
FROM ubuntu:22.04 as ovs-builder

ARG ARCH
ARG NO_AVX512=false
ARG DEBIAN_FRONTEND=noninteractive
ENV SRC_DIR='/usr/src'

RUN apt update && apt install -y build-essential fakeroot git curl \
    autoconf automake bzip2 debhelper-compat dh-exec dh-python dh-sequence-python3 dh-sequence-sphinxdoc \
    graphviz iproute2 libcap-ng-dev libdbus-1-dev libnuma-dev libpcap-dev libssl-dev libtool libunbound-dev \
    openssl pkg-config procps python3-all-dev python3-setuptools python3-sortedcontainers python3-sphinx

RUN cd /usr/src/ && \
    git clone -b branch-3.1 --depth=1 https://github.com/openvswitch/ovs.git && \
    cd ovs && \
    # fix memory leak by ofport_usage and trim memory periodically
    curl -s https://github.com/kubeovn/ovs/commit/10972d963208490c5fe6ff66247b86b947136da6.patch | git apply && \
    # increase election timer
    curl -s https://github.com/kubeovn/ovs/commit/38df6fa3f721dc53464fcff61dbc2bc79c710ab1.patch | git apply && \
    # add fdb update logging
    curl -s https://github.com/kubeovn/ovs/commit/d4888c4e75f2288d8ff4f04ee57538659f118f5b.patch | git apply && \
    # fdb: fix mac learning in environments with hairpin enabled
    curl -s https://github.com/kubeovn/ovs/commit/403fbd0f6561c8985302734608c2de659671c563.patch | git apply && \
    # ovsdb-tool: add optional server id parameter for "join-cluster" command
    curl -s https://github.com/kubeovn/ovs/commit/9a81b91368b27afda97657a8864b729dc2e029e2.patch | git apply && \
    # compile without avx512
    if [ "$ARCH" = "amd64" -a "$NO_AVX512" = "true" ]; then curl -s https://github.com/kubeovn/ovs/commit/97f9f85a277e5372af6e3cd899cab1b63f6f6b44.patch | git apply; fi && \
    ./boot.sh && \
    ./configure && \
    rm -rf .git && \
    CONFIGURE_OPTS='' && \
    if [ "$ARCH" = "amd64" ]; then CONFIGURE_OPTS='CFLAGS="-O2 -g -msse4.2 -mpopcnt -fPIC"'; fi && \
    DATAPATH_CONFIGURE_OPTS='--prefix=/usr' EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck nodpdk' make debian-deb

RUN dpkg -i /usr/src/python3-openvswitch*.deb

RUN cd /usr/src/ && git clone -b branch-22.12 --depth=1 https://github.com/ovn-org/ovn.git && \
    cd ovn && \
    # do not send traffic that not designate to svc to conntrack
    curl -s https://github.com/kubeovn/ovn/commit/0700cb90f950db1fb43490545dd4fc41afa46d70.patch | git apply && \
    # change hash type from dp_hash to hash with field src_ip
    curl -s https://github.com/kubeovn/ovn/commit/c48049a64fedb1278f9158770a12751ee5bfc358.patch | git apply && \
    # set ether dst addr for dnat on logical switch
    curl -s https://github.com/kubeovn/ovn/commit/540592b9fff8c5574ae605086fdaa16b718551f7.patch | git apply && \
    # modify src route priority
    curl -s https://github.com/kubeovn/ovn/commit/b3801ecb732a788efd2380a7daca4e2a7726128e.patch | git apply && \
    # fix reaching resubmit limit in underlay
    curl -s https://github.com/kubeovn/ovn/commit/977e569539893460cd27b2287d6042b62079ea65.patch | git apply && \
    sed -i 's/OVN/ovn/g' debian/changelog && \
    rm -rf .git && \
    ./boot.sh && \
    CONFIGURE_OPTS='--with-ovs-build=/usr/src/ovs/_debian' && \
    if [ "$ARCH" = "amd64" ]; then CONFIGURE_OPTS="$CONFIGURE_OPTS CFLAGS='-O2 -g -msse4.2 -mpopcnt -fPIC'"; fi && \
    OVSDIR=/usr/src/ovs EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary

RUN mkdir /packages/ && \
     cp /usr/src/openvswitch-*.deb /packages && \
     cp /usr/src/python3-openvswitch*.deb /packages && \
     cp /usr/src/ovn-*.deb /packages && \
     cd /packages && rm -f *source* *dbg* *doc* *datapath* *docker* *vtep* *ipsec* *test* *dev*

FROM ubuntu:22.04

ARG DEBIAN_FRONTEND=noninteractive
RUN apt update && apt upgrade -y && apt install ca-certificates python3 hostname libunwind8 netbase \
        ethtool iproute2 ncat libunbound-dev procps libatomic1 kmod iptables python3-netifaces python3-sortedcontainers \
        tcpdump ipset curl uuid-runtime openssl inetutils-ping arping ndisc6 \
        logrotate dnsutils net-tools -y --no-install-recommends && \
        rm -rf /var/lib/apt/lists/* && \
        cd /usr/sbin && \
        ln -sf /usr/sbin/iptables-legacy iptables && \
        ln -sf /usr/sbin/ip6tables-legacy ip6tables && \
        rm -rf /etc/localtime

RUN mkdir -p /var/run/openvswitch && \
    mkdir -p /var/run/ovn && \
    mkdir -p /etc/cni/net.d && \
    mkdir -p /opt/cni/bin

ARG ARCH
ENV CNI_VERSION=v1.2.0
RUN curl -sSf -L --retry 5 https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz | tar -xz -C . ./loopback ./portmap ./macvlan

ENV KUBE_VERSION="v1.24.9"

RUN curl -L https://dl.k8s.io/${KUBE_VERSION}/kubernetes-client-linux-${ARCH}.tar.gz | tar -xz -C . && cp ./kubernetes/client/bin/kubectl /usr/bin/kubectl \
 && chmod +x /usr/bin/kubectl && rm -rf ./kubernetes

RUN --mount=type=bind,target=/packages,from=ovs-builder,source=/packages  \
    dpkg -i /packages/openvswitch-*.deb /packages/python3-openvswitch*.deb && \
    dpkg -i --ignore-depends=openvswitch-switch,openvswitch-common /packages/ovn-*.deb && \
    rm -rf /var/lib/openvswitch/pki/

ENV DUMB_INIT_VERSION="1.2.5"
RUN dump_arch="x86_64"; \
    if [ "$ARCH" = "arm64" ]; then dump_arch="aarch64"; fi; \
    curl -sSf -L --retry 5 -o /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_${dump_arch} && \
    chmod +x /usr/bin/dumb-init

ENTRYPOINT ["/usr/bin/dumb-init", "--"]
