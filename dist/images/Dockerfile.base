# syntax = docker/dockerfile:experimental
# renovate: datasource=golang-version depName=go
ARG GO_VERSION=1.24.6

FROM ubuntu:24.04 AS openssl-builder

ARG DEBIAN_FRONTEND=noninteractive

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    sed -i 's/^Types: deb$/Types: deb deb-src/g' /etc/apt/sources.list.d/ubuntu.sources && \
    apt update && \
    apt install -y apt-src && \
    apt-src update && \
    apt-src install openssl

RUN cd openssl-* && \
    sed -i '/^CONFARGS/a CONFARGS += enable-fips no-unit-test' debian/rules && \
    echo >> debian/control && \
    echo 'Package: libssl3t64-fips' >> debian/control && \
    echo 'Section: libs' >> debian/control && \
    echo 'Architecture: any' >> debian/control && \
    echo 'Multi-Arch: same' >> debian/control && \
    echo 'Depends: libssl3t64 (= ${binary:Version}), ${misc:Depends}' >> debian/control && \
    echo 'Description: OpenSSL fips module' >> debian/control && \
    echo 'usr/lib/ssl/fipsmodule.cnf' >> debian/libssl3t64-fips.install && \
    echo 'usr/lib/*/ossl-modules/fips.so' >> debian/libssl3t64-fips.install && \
    DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary

RUN mkdir /packages/ && \
    cp *fips*.deb /packages

FROM ubuntu:24.04 AS ovs-builder

ARG ARCH
ARG LEGACY
ARG DEBIAN_FRONTEND=noninteractive
ARG SRC_DIR='/usr/src'

ADD patches/4228eab1d722087ba795e310eadc9e25c4513ec1.patch $SRC_DIR
ADD patches/54056ea65dc28aa1c4c721a2a34d7913f79f8376.patch $SRC_DIR
ADD patches/6b4dcb311f171d81a5d40ea51a273fc356c123db.patch $SRC_DIR
ADD patches/f627b7721ec282f2edaf798913b1559b939687f0.patch $SRC_DIR
ADD patches/3f3e3a436ff5eb2eaafbeeae8ea9dc0c514fe8a3.patch $SRC_DIR
ADD patches/a6cb8215a80635129e4fada4c0d25c25fb746bf7.patch $SRC_DIR
ADD patches/d4d76ddb2e12cdd9e73bb5e008ebb9fd1b4d6ca6.patch $SRC_DIR
ADD patches/ffd2328d4a55271569e2b89e54a2c18f4e186af8.patch $SRC_DIR
ADD patches/d088c5d8c263552c5a31d87813991aee30ab74de.patch $SRC_DIR
ADD patches/1b31f07dc60c016153fa35d936cdda0e02e58492.patch $SRC_DIR
ADD patches/54b767822916606dbb78335a3197983f435b5b8a.patch $SRC_DIR
ADD patches/9ee66bd91be65605cffb9a490b4dba3bc13358e9.patch $SRC_DIR
ADD patches/e889d46924085ca0fe38a2847da973dfe6ea100e.patch $SRC_DIR
ADD patches/f9e97031b56ab5747b5d73629198331a6daacdfd.patch $SRC_DIR
ADD patches/e76880e792af56b2a3836098105079f5f8f1ff26.patch $SRC_DIR
ADD patches/78cade01874292e2c101c39b975290ef6c812a50.patch $SRC_DIR
ADD patches/85aa6263ad5b3648eb7ceec90c812328dbb7c6c0.patch $SRC_DIR
ADD patches/34dc3e3fcfacec6597293765ecd6e20fe15581f1.patch $SRC_DIR
ADD patches/a297b840c2c9f118c7ce6133077087b5999f12dd.patch $SRC_DIR
ADD patches/e5916eb53abc3b7d28c407c3c47566c46116090a.patch $SRC_DIR
ADD patches/477695a010affe56efdd66b60510fa612f8704c1.patch $SRC_DIR
ADD patches/03e35ed9c5b4de0fa8acbc2c057cdd5957a8d605.patch $SRC_DIR
ADD patches/e4e6ea9c5f4ba080b719924e470daa8094ff38a7.patch $SRC_DIR
ADD patches/e7d3ba53cdcbc524bb29c54ddb07b83cc4258ed7.patch $SRC_DIR
ADD patches/9286e1fd578fdb8f565a0f4aa9066b538295e1ac.patch $SRC_DIR

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt update && apt install -y git curl

RUN cd /usr/src/ && \
    git clone -b branch-3.5 --depth=1 https://github.com/openvswitch/ovs.git && \
    cd ovs && \
    # fix memory leak by ofport_usage and trim memory periodically
    git apply $SRC_DIR/4228eab1d722087ba795e310eadc9e25c4513ec1.patch && \
    # increase election timer
    git apply $SRC_DIR/54056ea65dc28aa1c4c721a2a34d7913f79f8376.patch && \
    # add fdb update logging
    git apply $SRC_DIR/6b4dcb311f171d81a5d40ea51a273fc356c123db.patch && \
    # fdb: fix mac learning in environments with hairpin enabled
    git apply $SRC_DIR/f627b7721ec282f2edaf798913b1559b939687f0.patch && \
    # ovsdb-tool: add optional server id parameter for "join-cluster" command
    git apply $SRC_DIR/3f3e3a436ff5eb2eaafbeeae8ea9dc0c514fe8a3.patch && \
    # fix memory leak in qos
    git apply $SRC_DIR/a6cb8215a80635129e4fada4c0d25c25fb746bf7.patch && \
    # ovsdb-tool: add command fix-cluster
    git apply $SRC_DIR/d4d76ddb2e12cdd9e73bb5e008ebb9fd1b4d6ca6.patch && \
    # netdev: reduce cpu utilization for getting device addresses
    git apply $SRC_DIR/ffd2328d4a55271569e2b89e54a2c18f4e186af8.patch && \
    # ovs-router: skip getting source address for kube-ipvs0
    git apply $SRC_DIR/d088c5d8c263552c5a31d87813991aee30ab74de.patch && \
    # increase the default probe interval for large cluster
    git apply $SRC_DIR/1b31f07dc60c016153fa35d936cdda0e02e58492.patch && \
    # update ovs-sandbox for docker run
    git apply $SRC_DIR/54b767822916606dbb78335a3197983f435b5b8a.patch

RUN cd /usr/src/ && git clone -b branch-25.03 --depth=1 https://github.com/ovn-org/ovn.git && \
    cd ovn && \
    # modify src route priority
    git apply $SRC_DIR/9ee66bd91be65605cffb9a490b4dba3bc13358e9.patch && \
    # fix reaching resubmit limit in underlay
    git apply $SRC_DIR/e889d46924085ca0fe38a2847da973dfe6ea100e.patch && \
    # ovn-controller: do not send GARP on localnet for Kube-OVN ports
    git apply $SRC_DIR/f9e97031b56ab5747b5d73629198331a6daacdfd.patch && \
    # add support for conditionally skipping conntrack
    git apply $SRC_DIR/78cade01874292e2c101c39b975290ef6c812a50.patch && \
    # northd: skip conntrack when access node local dns ip
    git apply $SRC_DIR/85aa6263ad5b3648eb7ceec90c812328dbb7c6c0.patch && \
    # lflow: do not send direct traffic between lports to conntrack
    git apply $SRC_DIR/34dc3e3fcfacec6597293765ecd6e20fe15581f1.patch && \
    # direct output to lsp for dnat packets in logical switch ingress pipelines
    git apply $SRC_DIR/a297b840c2c9f118c7ce6133077087b5999f12dd.patch && \
    # ovn-controller: make activation strategy work for single chassis
    git apply $SRC_DIR/03e35ed9c5b4de0fa8acbc2c057cdd5957a8d605.patch && \
	# skip node local dns ip conntrack when set acl
    git apply $SRC_DIR/e7d3ba53cdcbc524bb29c54ddb07b83cc4258ed7.patch && \
	# select local backend first
    git apply $SRC_DIR/9286e1fd578fdb8f565a0f4aa9066b538295e1ac.patch && \
    # fix lr-lb dnat with multiple distributed gateway ports
    git apply $SRC_DIR/e5916eb53abc3b7d28c407c3c47566c46116090a.patch && \
    # support dedicated BFD LRP
    git apply $SRC_DIR/e4e6ea9c5f4ba080b719924e470daa8094ff38a7.patch && \	
    # northd: add nb option version_compatibility
    git apply $SRC_DIR/e76880e792af56b2a3836098105079f5f8f1ff26.patch && \
    # northd: skip arp/nd request for lrp addresses from localnet ports
    git apply $SRC_DIR/477695a010affe56efdd66b60510fa612f8704c1.patch

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt update && \
    apt install -y wget build-essential fakeroot && \
    apt install -y autoconf automake bzip2 debhelper-compat dh-exec dh-python dh-sequence-python3 dh-sequence-sphinxdoc \
    graphviz iproute2 libcap-ng-dev libdbus-1-dev libnuma-dev libpcap-dev libssl-dev libtool libunbound-dev \
    pkg-config procps python3-all-dev python3-setuptools python3-sortedcontainers python3-sphinx

RUN cd /usr/src/ovs && \
    ./boot.sh && \
    ./configure && \
    rm -rf .git && \
    CONFIGURE_OPTS='CFLAGS="-fPIC"' && \
    if [ "$ARCH" = "amd64" ] && [ "$LEGACY" != "true" ]; then CONFIGURE_OPTS='CFLAGS="-O2 -g -msse4.2 -mpopcnt -fPIC"'; fi && \
    DATAPATH_CONFIGURE_OPTS='--prefix=/usr' EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS make debian-deb

RUN cd /usr/src/ovn && \
    sed -i 's/OVN/ovn/g' debian/changelog && \
    rm -rf .git && \
    ./boot.sh && \
    CONFIGURE_OPTS='--with-ovs-build=/usr/src/ovs/_debian CFLAGS="-fPIC"' && \
    if [ "$ARCH" = "amd64" ] && [ "$LEGACY" != "true" ]; then CONFIGURE_OPTS="--with-ovs-build=/usr/src/ovs/_debian CFLAGS='-O2 -g -msse4.2 -mpopcnt -fPIC'"; fi && \
    OVSDIR=/usr/src/ovs EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary

RUN mkdir -p /usr/src/openbfdd && \
    curl -sSf -L --retry 5 https://github.com/dyninc/OpenBFDD/archive/e35f43ad8d2b3f084e96a84c392528a90d05a287.tar.gz | \
    tar -xz -C /usr/src/openbfdd --strip-components=1

ADD OpenBFDD-compile.patch /usr/src/
ADD OpenBFDD-allow-ttl-254.patch /usr/src/

RUN cd /usr/src/openbfdd && \
    rm -vf missing && \
    git apply --no-apply /usr/src/OpenBFDD-compile.patch && \
    git apply --no-apply /usr/src/OpenBFDD-allow-ttl-254.patch && \
    autoupdate && \
    ./autogen.sh && \
    ./configure --enable-silent-rules && \
    make -j8

RUN mkdir /packages/ && \
    mv /usr/src/openbfdd/bfdd-beacon /usr/src/openbfdd/bfdd-control /packages/ && \
    cp /usr/src/openvswitch-*deb /packages && \
    cp /usr/src/python3-openvswitch*deb /packages && \
    cp /usr/src/ovn-*deb /packages && \
    cp /usr/src/ovs/tutorial/ovs-sandbox /packages && \
    cd /packages && rm -f *source* *doc* *datapath* *docker* *vtep* *test* *dev*

FROM ghcr.io/aquasecurity/trivy:latest AS trivy

ARG ARCH
# renovate: datasource=github-releases depName=cni-plugin packageName=containernetworking/plugins versioning=semver
ARG CNI_PLUGINS_VERSION=v1.7.1
# renovate: datasource=github-releases depName=kubectl packageName=kubernetes/kubernetes versioning=semver
ARG KUBECTL_VERSION=v1.33.4
# renovate: datasource=github-releases depName=gobgp packageName=osrg/gobgp versioning=semver
ARG GOBGP_VERSION=3.37.0
ARG TRIVY_DB_REPOSITORY="public.ecr.aws/aquasecurity/trivy-db:2"

RUN apk --no-cache add curl jq
ADD go-deps/download-go-deps.sh /
RUN sh -x /download-go-deps.sh

FROM golang:$GO_VERSION-alpine AS go-deps

RUN apk --no-cache add bash curl jq
ADD go-deps/rebuild-go-deps.sh /
RUN --mount=type=bind,target=/trivy,from=trivy,source=/godeps \
    bash -x /rebuild-go-deps.sh

FROM ubuntu:24.04 AS ubuntu

RUN rm -rf /etc/localtime
RUN rm -f /usr/lib/apt/methods/mirror
RUN usermod -s /usr/sbin/nologin sync
RUN usermod -s /usr/sbin/nologin ubuntu
RUN apt remove -y --allow-remove-essential --auto-remove login

FROM scratch

LABEL "org.opencontainers.image.ref.name"="ubuntu"
LABEL "org.opencontainers.image.version"="24.04"

ENV PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
CMD ["/bin/bash"]

COPY --from=ubuntu / /

ARG ARCH
ARG DEBIAN_FRONTEND=noninteractive
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt update && apt upgrade -y && \
    apt install ca-certificates netbase ethtool iproute2 ncat libunbound8 \
        kmod iptables python3-netifaces python3-sortedcontainers tcpdump ipvsadm ipset curl \
        uuid-runtime openssl inetutils-ping arping ndisc6 conntrack traceroute iputils-tracepath \
        logrotate dnsutils net-tools strongswan strongswan-pki libcharon-extra-plugins \
        libcharon-extauth-plugins libstrongswan-extra-plugins libstrongswan-standard-plugins \
        -y --no-install-recommends --auto-remove && \
    apt remove -y --allow-remove-essential --auto-remove login && \
    setcap CAP_NET_ADMIN+eip $(readlink -f $(which conntrack)) && \
    setcap CAP_NET_ADMIN+eip $(readlink -f $(which ethtool)) && \
    setcap CAP_NET_ADMIN+eip $(readlink -f $(which ip)) && \
    setcap CAP_NET_ADMIN+eip $(readlink -f $(which ipset)) && \
    setcap CAP_NET_ADMIN+eip $(readlink -f $(which traceroute)) && \
    setcap CAP_NET_ADMIN,CAP_NET_RAW+eip $(readlink -f $(which xtables-legacy-multi)) && \
    setcap CAP_NET_ADMIN,CAP_NET_RAW+eip $(readlink -f $(which xtables-nft-multi)) && \
    setcap CAP_NET_RAW+eip $(readlink -f $(which arping)) && \
    setcap CAP_NET_RAW+eip $(readlink -f $(which ndisc6)) && \
    setcap CAP_NET_RAW+eip $(readlink -f $(which tcpdump)) && \
    setcap CAP_SYS_ADMIN+eip $(readlink -f $(which nsenter)) && \
    setcap CAP_SYS_ADMIN+eip $(readlink -f $(which sysctl)) && \
    setcap CAP_SYS_MODULE+eip $(readlink -f $(which modprobe)) && \
    setcap CAP_SYS_NICE+eip $(readlink -f $(which nice)) && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /etc/localtime && \
    rm -f /usr/bin/nc && \
    rm -f /usr/bin/netcat && \
    rm -f /usr/lib/apt/methods/mirror

RUN mkdir -p /var/run/openvswitch && \
    mkdir -p /var/run/ovn && \
    mkdir -p /etc/cni/net.d && \
    mkdir -p /opt/cni/bin

ARG DUMB_INIT_VERSION="1.2.5"
RUN curl -sSf -L --retry 5 -o /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_$(arch) && \
    chmod +x /usr/bin/dumb-init

RUN --mount=type=bind,target=/godeps,from=go-deps,source=/godeps \
    cp /godeps/loopback /godeps/portmap /godeps/macvlan ./ && \
    cp /godeps/kubectl /godeps/gobgp /usr/bin/

ARG DEBUG=false

RUN --mount=type=bind,target=/packages,from=ovs-builder,source=/packages \
    cp /packages/bfdd-beacon /packages/bfdd-control /usr/bin/ && \
    cp /packages/ovs-sandbox /usr/bin/ && chmod +x /usr/bin/ovs-sandbox && \
    setcap CAP_NET_BIND_SERVICE+eip /usr/bin/bfdd-beacon && \
    dpkg -i /packages/openvswitch-*.deb /packages/python3-openvswitch*.deb /packages/ovn-*.deb && \
    rm -rf /var/lib/openvswitch/pki/ && \
    chown -R nobody: /var/lib/logrotate && \
    setcap CAP_NET_ADMIN+eip $(readlink -f $(which ovs-dpctl)) && \
    if [ "${DEBUG}" != "true" ]; then \
        setcap CAP_NET_BIND_SERVICE+eip $(readlink -f $(which ovsdb-server)) && \
        setcap CAP_NET_ADMIN,CAP_NET_BIND_SERVICE,CAP_SYS_ADMIN+eip $(readlink -f $(which ovs-vswitchd)) && \
        dpkg --purge gpgv apt; \
    else \
        apt update && apt install -y --no-install-recommends gdb valgrind && \
        rm -rf /var/lib/apt/lists/* && \
        dpkg -i /packages/*.ddeb; \
    fi

RUN --mount=type=bind,target=/packages,from=openssl-builder,source=/packages \
    dpkg -i /packages/*.deb && \
    openssl fipsinstall -out /usr/lib/ssl/fipsmodule.cnf -module $(find / -name fips.so) && \
    sed -i --follow-symlinks \
        -e '/^\[provider_sect\]/a fips = fips_sect' \
        -e '/^\[default_sect\]/a activate = 1' \
        -e '$a \\n.include /usr/lib/ssl/fipsmodule.cnf' \
        /usr/lib/ssl/openssl.cnf

ENTRYPOINT ["/usr/bin/dumb-init", "--"]
