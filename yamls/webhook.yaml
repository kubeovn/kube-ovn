---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kube-ovn-webhook
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-ovn-webhook
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube-ovn-webhook
    spec:
      tolerations:
        - operator: Exists
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: kube-ovn-webhook
              topologyKey: kubernetes.io/hostname
      serviceAccountName: ovn
      hostNetwork: true
      containers:
        - name: kube-ovn-webhook
          image: "kubeovn/kube-ovn:v1.13.0"
          imagePullPolicy: IfNotPresent
          command:
            - /kube-ovn/kube-ovn-webhook
          args:
            - --port=8443
            - --health-probe-port=8080
            - --v=3
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 8080
            name: health-probe
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: kube-ovn-webhook-secret
      nodeSelector:
        kubernetes.io/os: "linux"

---
kind: Service
apiVersion: v1
metadata:
  name: kube-ovn-webhook
  namespace: kube-system
spec:
  ports:
    - name: kube-ovn-webhook
      protocol: TCP
      port: 443
      targetPort: 8443
  type: ClusterIP
  selector:
    app: kube-ovn-webhook
  sessionAffinity: None

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: kube-ovn-webhook
  annotations:
    cert-manager.io/inject-ca-from: kube-system/kube-ovn-webhook-serving-cert
webhooks:
- name: pod-ip-validating.kube-ovn.io
  rules:
    - operations:
        - CREATE
      apiGroups:
        - "apps"
      apiVersions:
        - v1
      resources:
        - deployments
        - statefulsets
        - daemonsets
    - operations:
        - CREATE
      apiGroups:
        - "batch"
      apiVersions:
        - v1
      resources:
        - jobs
        - cronjobs
    - operations:
        - CREATE
      apiGroups:
        - ""
      apiVersions:
        - v1
      resources:
        - pods
    - operations:
        - CREATE
        - UPDATE
        - DELETE
      apiGroups:
        - "kubeovn.io"
      apiVersions:
        - v1
      resources:
        - subnets
        - vpcs
        - vips
        - vpc-nat-gateways
        - iptables-eips
        - iptables-dnat-rules
        - iptables-snat-rules
        - iptables-fip-rules
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  timeoutSeconds: 5
  clientConfig:
    service:
      namespace: kube-system
      name: kube-ovn-webhook
      path: /validating
      port: 443
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kube-ovn-webhook-serving-cert
  namespace: kube-system
spec:
  dnsNames:
    - kube-ovn-webhook.kube-system
    - kube-ovn-webhook.kube-system.svc
    - kube-ovn-webhook.kube-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kube-ovn-webhook-selfsigned-issuer
    group: cert-manager.io
  secretName: kube-ovn-webhook-secret
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kube-ovn-webhook-selfsigned-issuer
  namespace: kube-system
spec:
  selfSigned: {}
