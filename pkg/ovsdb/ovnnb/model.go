// Code generated by "libovsdb.modelgen"
// DO NOT EDIT.

package ovnnb

import (
	"encoding/json"

	"github.com/ovn-org/libovsdb/model"
	"github.com/ovn-org/libovsdb/ovsdb"
)

// FullDatabaseModel returns the DatabaseModel object to be used in libovsdb
func FullDatabaseModel() (model.ClientDBModel, error) {
	return model.NewClientDBModel("OVN_Northbound", map[string]model.Model{
		"ACL":                         &ACL{},
		"Address_Set":                 &AddressSet{},
		"BFD":                         &BFD{},
		"Connection":                  &Connection{},
		"Copp":                        &Copp{},
		"DHCP_Options":                &DHCPOptions{},
		"DNS":                         &DNS{},
		"Forwarding_Group":            &ForwardingGroup{},
		"Gateway_Chassis":             &GatewayChassis{},
		"HA_Chassis":                  &HAChassis{},
		"HA_Chassis_Group":            &HAChassisGroup{},
		"Load_Balancer":               &LoadBalancer{},
		"Load_Balancer_Group":         &LoadBalancerGroup{},
		"Load_Balancer_Health_Check":  &LoadBalancerHealthCheck{},
		"Logical_Router":              &LogicalRouter{},
		"Logical_Router_Policy":       &LogicalRouterPolicy{},
		"Logical_Router_Port":         &LogicalRouterPort{},
		"Logical_Router_Static_Route": &LogicalRouterStaticRoute{},
		"Logical_Switch":              &LogicalSwitch{},
		"Logical_Switch_Port":         &LogicalSwitchPort{},
		"Meter":                       &Meter{},
		"Meter_Band":                  &MeterBand{},
		"NAT":                         &NAT{},
		"NB_Global":                   &NBGlobal{},
		"Port_Group":                  &PortGroup{},
		"QoS":                         &QoS{},
		"SSL":                         &SSL{},
	})
}

var schema = `{
  "name": "OVN_Northbound",
  "version": "6.1.0",
  "tables": {
    "ACL": {
      "columns": {
        "action": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "allow",
                  "allow-related",
                  "allow-stateless",
                  "drop",
                  "reject"
                ]
              ]
            }
          }
        },
        "direction": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "from-lport",
                  "to-lport"
                ]
              ]
            }
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "label": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 4294967295
            }
          }
        },
        "log": {
          "type": "boolean"
        },
        "match": {
          "type": "string"
        },
        "meter": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "name": {
          "type": {
            "key": {
              "type": "string",
              "minLength": 63,
              "maxLength": 63
            },
            "min": 0
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "priority": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 32767
            }
          }
        },
        "severity": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "alert",
                  "debug",
                  "info",
                  "notice",
                  "warning"
                ]
              ]
            },
            "min": 0
          }
        }
      }
    },
    "Address_Set": {
      "columns": {
        "addresses": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "BFD": {
      "columns": {
        "detect_mult": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 1
            },
            "min": 0
          }
        },
        "dst_ip": {
          "type": "string"
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "logical_port": {
          "type": "string"
        },
        "min_rx": {
          "type": {
            "key": {
              "type": "integer"
            },
            "min": 0
          }
        },
        "min_tx": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 1
            },
            "min": 0
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "status": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "admin_down",
                  "down",
                  "init",
                  "up"
                ]
              ]
            },
            "min": 0
          }
        }
      },
      "indexes": [
        [
          "logical_port",
          "dst_ip"
        ]
      ]
    },
    "Connection": {
      "columns": {
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "inactivity_probe": {
          "type": {
            "key": {
              "type": "integer"
            },
            "min": 0
          }
        },
        "is_connected": {
          "type": "boolean"
        },
        "max_backoff": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 1000
            },
            "min": 0
          }
        },
        "other_config": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "status": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "target": {
          "type": "string"
        }
      },
      "indexes": [
        [
          "target"
        ]
      ]
    },
    "Copp": {
      "columns": {
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "meters": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "DHCP_Options": {
      "columns": {
        "cidr": {
          "type": "string"
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        }
      }
    },
    "DNS": {
      "columns": {
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "records": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        }
      }
    },
    "Forwarding_Group": {
      "columns": {
        "child_port": {
          "type": {
            "key": {
              "type": "string"
            },
            "max": "unlimited"
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "liveness": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "vip": {
          "type": "string"
        },
        "vmac": {
          "type": "string"
        }
      }
    },
    "Gateway_Chassis": {
      "columns": {
        "chassis_name": {
          "type": "string"
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "priority": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 32767
            }
          }
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "HA_Chassis": {
      "columns": {
        "chassis_name": {
          "type": "string"
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "priority": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 32767
            }
          }
        }
      }
    },
    "HA_Chassis_Group": {
      "columns": {
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ha_chassis": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "HA_Chassis"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "Load_Balancer": {
      "columns": {
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "health_check": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Load_Balancer_Health_Check"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ip_port_mappings": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "protocol": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "sctp",
                  "tcp",
                  "udp"
                ]
              ]
            },
            "min": 0
          }
        },
        "selection_fields": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "eth_dst",
                  "eth_src",
                  "ip_dst",
                  "ip_src",
                  "tp_dst",
                  "tp_src"
                ]
              ]
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "vips": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        }
      }
    },
    "Load_Balancer_Group": {
      "columns": {
        "load_balancer": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Load_Balancer",
              "refType": "weak"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "Load_Balancer_Health_Check": {
      "columns": {
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "vip": {
          "type": "string"
        }
      }
    },
    "Logical_Router": {
      "columns": {
        "copp": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Copp",
              "refType": "weak"
            },
            "min": 0
          }
        },
        "enabled": {
          "type": {
            "key": {
              "type": "boolean"
            },
            "min": 0
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "load_balancer": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Load_Balancer",
              "refType": "weak"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "load_balancer_group": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Load_Balancer_Group"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        },
        "nat": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "NAT"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "policies": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Logical_Router_Policy"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ports": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Logical_Router_Port"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "static_routes": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Logical_Router_Static_Route"
            },
            "min": 0,
            "max": "unlimited"
          }
        }
      }
    },
    "Logical_Router_Policy": {
      "columns": {
        "action": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "allow",
                  "drop",
                  "reroute"
                ]
              ]
            }
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "match": {
          "type": "string"
        },
        "nexthop": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "nexthops": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "priority": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 32767
            }
          }
        }
      }
    },
    "Logical_Router_Port": {
      "columns": {
        "enabled": {
          "type": {
            "key": {
              "type": "boolean"
            },
            "min": 0
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "gateway_chassis": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Gateway_Chassis"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ha_chassis_group": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "HA_Chassis_Group"
            },
            "min": 0
          }
        },
        "ipv6_prefix": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ipv6_ra_configs": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "mac": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networks": {
          "type": {
            "key": {
              "type": "string"
            },
            "max": "unlimited"
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "peer": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "Logical_Router_Static_Route": {
      "columns": {
        "bfd": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "BFD",
              "refType": "weak"
            },
            "min": 0
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ip_prefix": {
          "type": "string"
        },
        "nexthop": {
          "type": "string"
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "output_port": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "policy": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "dst-ip",
                  "src-ip"
                ]
              ]
            },
            "min": 0
          }
        },
        "route_table": {
          "type": "string"
        }
      }
    },
    "Logical_Switch": {
      "columns": {
        "acls": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "ACL"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "copp": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Copp",
              "refType": "weak"
            },
            "min": 0
          }
        },
        "dns_records": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "DNS",
              "refType": "weak"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "forwarding_groups": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Forwarding_Group"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "load_balancer": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Load_Balancer",
              "refType": "weak"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "load_balancer_group": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Load_Balancer_Group"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        },
        "other_config": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ports": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Logical_Switch_Port"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "qos_rules": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "QoS"
            },
            "min": 0,
            "max": "unlimited"
          }
        }
      }
    },
    "Logical_Switch_Port": {
      "columns": {
        "addresses": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "dhcpv4_options": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "DHCP_Options",
              "refType": "weak"
            },
            "min": 0
          }
        },
        "dhcpv6_options": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "DHCP_Options",
              "refType": "weak"
            },
            "min": 0
          }
        },
        "dynamic_addresses": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "enabled": {
          "type": {
            "key": {
              "type": "boolean"
            },
            "min": 0
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "ha_chassis_group": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "HA_Chassis_Group"
            },
            "min": 0
          }
        },
        "name": {
          "type": "string"
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "parent_name": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "port_security": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "tag": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 1,
              "maxInteger": 4095
            },
            "min": 0
          }
        },
        "tag_request": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 4095
            },
            "min": 0
          }
        },
        "type": {
          "type": "string"
        },
        "up": {
          "type": {
            "key": {
              "type": "boolean"
            },
            "min": 0
          }
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "Meter": {
      "columns": {
        "bands": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Meter_Band"
            },
            "max": "unlimited"
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "fair": {
          "type": {
            "key": {
              "type": "boolean"
            },
            "min": 0
          }
        },
        "name": {
          "type": "string"
        },
        "unit": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "kbps",
                  "pktps"
                ]
              ]
            }
          }
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "Meter_Band": {
      "columns": {
        "action": {
          "type": {
            "key": {
              "type": "string",
              "enum": "drop"
            }
          }
        },
        "burst_size": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 4294967295
            }
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "rate": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 1,
              "maxInteger": 4294967295
            }
          }
        }
      }
    },
    "NAT": {
      "columns": {
        "allowed_ext_ips": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Address_Set"
            },
            "min": 0
          }
        },
        "exempted_ext_ips": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Address_Set"
            },
            "min": 0
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "external_ip": {
          "type": "string"
        },
        "external_mac": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "external_port_range": {
          "type": "string"
        },
        "logical_ip": {
          "type": "string"
        },
        "logical_port": {
          "type": {
            "key": {
              "type": "string"
            },
            "min": 0
          }
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "type": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "dnat",
                  "dnat_and_snat",
                  "snat"
                ]
              ]
            }
          }
        }
      }
    },
    "NB_Global": {
      "columns": {
        "connections": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Connection"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "hv_cfg": {
          "type": "integer"
        },
        "hv_cfg_timestamp": {
          "type": "integer"
        },
        "ipsec": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nb_cfg": {
          "type": "integer"
        },
        "nb_cfg_timestamp": {
          "type": "integer"
        },
        "options": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "sb_cfg": {
          "type": "integer"
        },
        "sb_cfg_timestamp": {
          "type": "integer"
        },
        "ssl": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "SSL"
            },
            "min": 0
          }
        }
      }
    },
    "Port_Group": {
      "columns": {
        "acls": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "ACL"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": {
            "key": {
              "type": "uuid",
              "refTable": "Logical_Switch_Port",
              "refType": "weak"
            },
            "min": 0,
            "max": "unlimited"
          }
        }
      },
      "indexes": [
        [
          "name"
        ]
      ]
    },
    "QoS": {
      "columns": {
        "action": {
          "type": {
            "key": {
              "type": "string",
              "enum": "dscp"
            },
            "value": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 63
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "bandwidth": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "burst",
                  "rate"
                ]
              ]
            },
            "value": {
              "type": "integer",
              "minInteger": 1,
              "maxInteger": 4294967295
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "direction": {
          "type": {
            "key": {
              "type": "string",
              "enum": [
                "set",
                [
                  "from-lport",
                  "to-lport"
                ]
              ]
            }
          }
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "match": {
          "type": "string"
        },
        "priority": {
          "type": {
            "key": {
              "type": "integer",
              "minInteger": 0,
              "maxInteger": 32767
            }
          }
        }
      }
    },
    "SSL": {
      "columns": {
        "bootstrap_ca_cert": {
          "type": "boolean"
        },
        "ca_cert": {
          "type": "string"
        },
        "certificate": {
          "type": "string"
        },
        "external_ids": {
          "type": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "min": 0,
            "max": "unlimited"
          }
        },
        "private_key": {
          "type": "string"
        },
        "ssl_ciphers": {
          "type": "string"
        },
        "ssl_protocols": {
          "type": "string"
        }
      }
    }
  }
}`

func Schema() ovsdb.DatabaseSchema {
	var s ovsdb.DatabaseSchema
	err := json.Unmarshal([]byte(schema), &s)
	if err != nil {
		panic(err)
	}
	return s
}
