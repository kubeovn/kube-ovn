/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1

import (
	context "context"

	kubeovnv1 "github.com/kubeovn/kube-ovn/pkg/apis/kubeovn/v1"
	scheme "github.com/kubeovn/kube-ovn/pkg/client/clientset/versioned/scheme"
	autoscalingv1 "k8s.io/api/autoscaling/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// BgpEdgeRouterAdvertisementsGetter has a method to return a BgpEdgeRouterAdvertisementInterface.
// A group's client should implement this interface.
type BgpEdgeRouterAdvertisementsGetter interface {
	BgpEdgeRouterAdvertisements(namespace string) BgpEdgeRouterAdvertisementInterface
}

// BgpEdgeRouterAdvertisementInterface has methods to work with BgpEdgeRouterAdvertisement resources.
type BgpEdgeRouterAdvertisementInterface interface {
	Create(ctx context.Context, bgpEdgeRouterAdvertisement *kubeovnv1.BgpEdgeRouterAdvertisement, opts metav1.CreateOptions) (*kubeovnv1.BgpEdgeRouterAdvertisement, error)
	Update(ctx context.Context, bgpEdgeRouterAdvertisement *kubeovnv1.BgpEdgeRouterAdvertisement, opts metav1.UpdateOptions) (*kubeovnv1.BgpEdgeRouterAdvertisement, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, bgpEdgeRouterAdvertisement *kubeovnv1.BgpEdgeRouterAdvertisement, opts metav1.UpdateOptions) (*kubeovnv1.BgpEdgeRouterAdvertisement, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*kubeovnv1.BgpEdgeRouterAdvertisement, error)
	List(ctx context.Context, opts metav1.ListOptions) (*kubeovnv1.BgpEdgeRouterAdvertisementList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *kubeovnv1.BgpEdgeRouterAdvertisement, err error)
	GetScale(ctx context.Context, bgpEdgeRouterAdvertisementName string, options metav1.GetOptions) (*autoscalingv1.Scale, error)
	UpdateScale(ctx context.Context, bgpEdgeRouterAdvertisementName string, scale *autoscalingv1.Scale, opts metav1.UpdateOptions) (*autoscalingv1.Scale, error)

	BgpEdgeRouterAdrvertisementExpansion
}

// bgpEdgeRouterAdvertisements implements BgpEdgeRouterAdvertisementInterface
type bgpEdgeRouterAdvertisements struct {
	*gentype.ClientWithList[*kubeovnv1.BgpEdgeRouterAdvertisement, *kubeovnv1.BgpEdgeRouterAdvertisementList]
}

// newBgpEdgeRouters returns a BgpEdgeRouters
func newBgpEdgeRouterAdvertisements(c *KubeovnV1Client, namespace string) *bgpEdgeRouterAdvertisements {
	return &bgpEdgeRouterAdvertisements{
		gentype.NewClientWithList[*kubeovnv1.BgpEdgeRouterAdvertisement, *kubeovnv1.BgpEdgeRouterAdvertisementList](
			"bgp-edge-router-advertisements",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *kubeovnv1.BgpEdgeRouterAdvertisement { return &kubeovnv1.BgpEdgeRouterAdvertisement{} },
			func() *kubeovnv1.BgpEdgeRouterAdvertisementList { return &kubeovnv1.BgpEdgeRouterAdvertisementList{} },
		),
	}
}

// GetScale takes name of the bgpEdgeRouter, and returns the corresponding autoscalingv1.Scale object, and an error if there is any.
func (c *bgpEdgeRouterAdvertisements) GetScale(ctx context.Context, bgpEdgeRouterAdvertisementName string, options metav1.GetOptions) (result *autoscalingv1.Scale, err error) {
	result = &autoscalingv1.Scale{}
	err = c.GetClient().Get().
		Namespace(c.GetNamespace()).
		Resource("bgp-edge-router-advertisements").
		Name(bgpEdgeRouterAdvertisementName).
		SubResource("scale").
		VersionedParams(&options, scheme.ParameterCodec).
		Do(ctx).
		Into(result)
	return
}

// UpdateScale takes the top resource name and the representation of a scale and updates it. Returns the server's representation of the scale, and an error, if there is any.
func (c *bgpEdgeRouterAdvertisements) UpdateScale(ctx context.Context, bgpEdgeRouterAdvertisementName string, scale *autoscalingv1.Scale, opts metav1.UpdateOptions) (result *autoscalingv1.Scale, err error) {
	result = &autoscalingv1.Scale{}
	err = c.GetClient().Put().
		Namespace(c.GetNamespace()).
		Resource("bgp-edge-router-advertisements").
		Name(bgpEdgeRouterAdvertisementName).
		SubResource("scale").
		VersionedParams(&opts, scheme.ParameterCodec).
		Body(scale).
		Do(ctx).
		Into(result)
	return
}
