name: Scheduled E2E

on:
  workflow_dispatch:
  schedule:
    - cron: "40 16 * * *"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  GO_VERSION: '1.19'
  KIND_VERSION: v0.17.0
  HELM_VERSION: v3.10.1

jobs:
  k8s-conformance-e2e:
    name: Kubernetes Conformance E2E
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        branch:
          - master
        ip-family:
          - ipv4
          - ipv6
          - dual
        mode:
          - overlay
          - underlay
    steps:
      - uses: actions/checkout@v3

      - name: Remove DNS search domain
        run: |
          sudo sed -i '/^search/d' /etc/resolv.conf
          sudo systemctl restart docker

      - uses: actions/setup-go@v3
        with:
          go-version: '${{ env.GO_VERSION }}'
          check-latest: true
        id: go

      - name: Export Go full version
        run: echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-

      - name: Create branch directory
        run: mkdir -p test/k8s-network/branches/${{ matrix.branch }}

      - name: Check out branch
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 1
          path: test/k8s-network/branches/${{ matrix.branch }}

      - name: Install Kind
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          sudo mv kind /usr/local/bin

      - name: Create kind cluster
        working-directory: test/k8s-network/branches/${{ matrix.branch }}
        run: |
          sudo pip3 install j2cli
          sudo pip3 install "j2cli[yaml]"
          sudo PATH=~/.local/bin:$PATH make kind-init-${{ matrix.ip-family }}
          sudo cp -r /root/.kube/ ~/.kube/
          sudo chmod -R 777 ~/.kube/

      - name: Install Kube-OVN
        working-directory: test/k8s-network/branches/${{ matrix.branch }}
        run: |
          docker pull kubeovn/kube-ovn:$(cat VERSION)
          make kind-install-${{ matrix.mode }}-${{ matrix.ip-family }}

      - name: Run E2E
        env:
          E2E_BRANCH: ${{ matrix.branch }}
          E2E_IP_FAMILY: ${{ matrix.ip-family }}
          E2E_NETWORK_MODE: ${{ matrix.mode }}
          KUBECONFIG: /home/runner/.kube/config
        run: make k8s-conformance-e2e

  k8s-netpol-e2e:
    name: Kubernetes Network Policy E2E
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        branch:
          - master
        ip-family:
          - ipv4
          - ipv6
          - dual
    steps:
      - uses: actions/checkout@v3

      - name: Remove DNS search domain
        run: |
          sudo sed -i '/^search/d' /etc/resolv.conf
          sudo systemctl restart docker

      - uses: actions/setup-go@v3
        with:
          go-version: '${{ env.GO_VERSION }}'
          check-latest: true
        id: go

      - name: Export Go full version
        run: echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-

      - name: Create branch directory
        run: mkdir -p test/k8s-network/branches/${{ matrix.branch }}

      - name: Check out branch
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 1
          path: test/k8s-network/branches/${{ matrix.branch }}

      - name: Install kind
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          sudo mv kind /usr/local/bin

      - name: Create kind cluster
        working-directory: test/k8s-network/branches/${{ matrix.branch }}
        run: |
          sudo pip3 install j2cli
          sudo pip3 install "j2cli[yaml]"
          sudo PATH=~/.local/bin:$PATH make kind-init-${{ matrix.ip-family }}

      - name: Install Kube-OVN
        working-directory: test/k8s-network/branches/${{ matrix.branch }}
        run: |
          docker pull kubeovn/kube-ovn:$(cat VERSION)
          sudo make kind-install-${{ matrix.ip-family }}

      - name: Run E2E
        env:
          KUBECONFIG: /home/runner/.kube/config
        run: make k8s-netpol-e2e

  cyclonus-netpol-e2e:
    name: Cyclonus Network Policy E2E
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        branch:
          - master
        ip-family:
          - ipv4
          - ipv6
          - dual
    steps:
      - uses: actions/checkout@v3

      - name: Remove DNS search domain
        run: |
          sudo sed -i '/^search/d' /etc/resolv.conf
          sudo systemctl restart docker

      - name: Create branch directory
        run: mkdir -p test/k8s-network/branches/${{ matrix.branch }}

      - name: Check out branch
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 1
          path: test/k8s-network/branches/${{ matrix.branch }}

      - name: Install kind
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          sudo mv kind /usr/local/bin

      - name: Create kind cluster
        working-directory: test/k8s-network/branches/${{ matrix.branch }}
        run: |
          sudo pip3 install j2cli
          sudo pip3 install "j2cli[yaml]"
          sudo PATH=~/.local/bin:$PATH make kind-init-${{ matrix.ip-family }}

      - name: Install Kube-OVN
        working-directory: test/k8s-network/branches/${{ matrix.branch }}
        run: |
          docker pull kubeovn/kube-ovn:$(cat VERSION)
          sudo make kind-install-${{ matrix.ip-family }}

      - name: Run E2E
        run: |
          sudo cp -r /root/.kube/ ~/.kube/
          sudo chmod -R 777 ~/.kube/
          make cyclonus-netpol-e2e

  kube-ovn-conformance-e2e:
    name: Kube-OVN Conformance E2E
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        branch:
          - master
        ip-family:
          - ipv4
          - ipv6
          - dual
        mode:
          - overlay
          - underlay
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '${{ env.GO_VERSION }}'
          check-latest: true
        id: go

      - name: Export Go full version
        run: echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-

      - name: Create branch directory
        run: mkdir -p test/kube-ovn/branches/${{ matrix.branch }}

      - name: Check out branch
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 1
          path: test/kube-ovn/branches/${{ matrix.branch }}

      - name: Install kind
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          sudo mv kind /usr/local/bin

      - name: Create kind cluster
        working-directory: test/kube-ovn/branches/${{ matrix.branch }}
        run: |
          sudo pip3 install j2cli
          sudo pip3 install "j2cli[yaml]"
          sudo PATH=~/.local/bin:$PATH make kind-init-${{ matrix.ip-family }}
          sudo cp -r /root/.kube/ ~/.kube/
          sudo chmod -R 777 ~/.kube/

      - name: Install Kube-OVN
        working-directory: test/kube-ovn/branches/${{ matrix.branch }}
        run: |
          docker pull kubeovn/kube-ovn:$(cat VERSION)
          make kind-install-${{ matrix.mode }}-${{ matrix.ip-family }}

      - name: Run E2E
        env:
          E2E_BRANCH: ${{ matrix.branch }}
          E2E_IP_FAMILY: ${{ matrix.ip-family }}
          E2E_NETWORK_MODE: ${{ matrix.mode }}
          KUBECONFIG: /home/runner/.kube/config
        run: make kube-ovn-conformance-e2e

  kube-ovn-ic-conformance-e2e:
    name: Kube-OVN IC Conformance E2E
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        branch:
          - master
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '${{ env.GO_VERSION }}'
          check-latest: true
        id: go

      - name: Export Go full version
        run: echo "GO_FULL_VER=$(go version | awk '{print $3}')" >> "$GITHUB_ENV"

      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-e2e-${{ env.GO_FULL_VER }}-x86-

      - name: Create branch directory
        run: mkdir -p test/kube-ovn/branches/${{ matrix.branch }}

      - name: Check out branch
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 1
          path: test/kube-ovn/branches/${{ matrix.branch }}

      - name: Install kind
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          sudo mv kind /usr/local/bin

      - name: Create kind cluster
        working-directory: test/kube-ovn/branches/${{ matrix.branch }}
        run: |
          sudo pip3 install j2cli
          sudo pip3 install "j2cli[yaml]"
          sudo PATH=~/.local/bin:$PATH make kind-init-ovn-ic
          sudo cp -r /root/.kube/ ~/.kube/
          sudo chmod -R 777 ~/.kube/

      - name: Install Kube-OVN
        working-directory: test/kube-ovn/branches/${{ matrix.branch }}
        run: |
          docker pull kubeovn/kube-ovn:$(cat VERSION)
          make kind-install-ovn-ic

      - name: Run E2E
        env:
          E2E_BRANCH: ${{ matrix.branch }}
          KUBECONFIG: /home/runner/.kube/config
        run: make kube-ovn-ic-conformance-e2e
